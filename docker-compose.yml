services:
  init:
    image: python:3.11-slim
    container_name: init_container
    command: ["echo", "Initializing the database..."]
    depends_on:
      - db
    networks:
      - todo_net

  db:
    image: postgres:14-alpine
    container_name: todo_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - todo_net
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 5s
      retries: 5


  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo_app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/" ]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - todo_net

volumes:
  db_data:

networks:
  todo_net: